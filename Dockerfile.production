# Build stage
FROM node:18.20.4-alpine AS builder

# Install build dependencies
RUN apk add --no-cache python3 make g++ git

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install ALL dependencies (including dev)
RUN npm ci

# Rebuild native modules
RUN npm rebuild better-sqlite3

# Copy source code
COPY . .

# Production stage
FROM node:18.20.4-alpine

# Install only runtime dependencies
RUN apk add --no-cache libstdc++

WORKDIR /app

# Copy package files
COPY package*.json ./

# Copy node_modules from builder (already built)
COPY --from=builder /app/node_modules ./node_modules

# Copy application code
COPY . .

# Create database directory
RUN mkdir -p /app/data

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Change ownership
RUN chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"

# Start application
CMD ["node", "src/app.js"]